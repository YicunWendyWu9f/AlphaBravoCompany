[{"categories":null,"content":"What is Rancher Multi-Cluster Management If you have ventured into container management and Kubernetes for your organization (or even for yourself), you have quickly realized that you need a robust way to manage more than one cluster easily. In fact, you probably want an easier way to manage a single cluster. The official Kubernetes dashboard is… sub-optimal. There are a few other open-source options out there, but they lack in many areas. So what are we supposed to do? # Rancher has entered the chat. This is where the Rancher UI, or Rancher Multi-Cluster Manager (Rancher MCM) comes into play. As engineers responsible for a plethora of technologies, even just drilling down into Kubernetes space we usually have: A local Kubernetes cluster (k3d, k3s on a Raspberry Pi, or similar) 1-2 Dev clusters 1-N Test, QA, etc clusters 1-N Production clusters On each of those clusters we need: Monitoring \u0026 Alerting Logging Backups Direct access to Pod console and logs Simplified deployment capabilities (Helm, etc) into each Quick view into the health of the cluster Much more This presents a problem because our time is already fragmented enough. We really need a unified interface that not only lowers the barrier to entry for less experienced Kubernetes users but also simplifies cluster and app administration for our fragmented attention. ","date":"2021-11-17","objectID":"/posts/2021/rancher-multi-cluster-management-ui/:1:0","tags":null,"title":"Rancher Multi-Cluster Management UI","uri":"/posts/2021/rancher-multi-cluster-management-ui/"},{"categories":null,"content":"What Can Rancher MCM Do? Rancher MCM has numerous capabilities that will make the developer, infrastructure, security and cluster-administrators life much easier. Some of the key features of Rancher MCM are: Certified Distritbution Support: Rancher supports any certified Kubernetes distribution. For on-premises workloads, we offer the RKE. For the public cloud, we support all the major distributions, including EKS, AKS, and GKE. For edge, branch and desktop workloads we offer K3s, a certified lightweight distribution of Kubernetes. Simplified Cluster Operations: Rancher provides simple, consistent cluster operations including provisioning, version management, visibility and diagnostics, monitoring and alerting, and centralized audit. Security, Policy and User Management: Rancher lets you automate processes and applies a consistent set of user access and security policies for all your clusters, no matter where they’re running. Shared Tools and Services: Rancher provides a rich catalog of services for building, deploying and scaling containerized applications, including app packaging, CI/CD, logging, monitoring and service mesh. ","date":"2021-11-17","objectID":"/posts/2021/rancher-multi-cluster-management-ui/:2:0","tags":null,"title":"Rancher Multi-Cluster Management UI","uri":"/posts/2021/rancher-multi-cluster-management-ui/"},{"categories":null,"content":"Deploying Rancher MCM There are 2 primary (well-documented) ways that we generally deploy Rancher MCM. ","date":"2021-11-17","objectID":"/posts/2021/rancher-multi-cluster-management-ui/:3:0","tags":null,"title":"Rancher Multi-Cluster Management UI","uri":"/posts/2021/rancher-multi-cluster-management-ui/"},{"categories":null,"content":"Single Host on Docker (Non HA) Docker Install Docker Advanced Options There are many scenarios where we need to stand up a temporary or demo instance of Rancher. While the production, highly available method is to deploy the Helm chart onto a HA Kubernetes cluster, the simplest way to get started is to deploy Rancher as a Docker container. Before you start, make sure you have a modern Linux distro running with a recent version of Docker running. The simple command which includes local persistent storage is: docker run -d --restart=unless-stopped \\ -p 80:80 -p 443:443 \\ -v /opt/rancher:/var/lib/rancher \\ --privileged \\ rancher/rancher:latest If you are running this on a public server, you can also automatically deploy this and get a valid SSL certificate from Let’s Encrypt using the following command. Make sure that the following is configured: Open port 80 from the internet to your server Configure the \u003cYOUR.DNS.NAME\u003e that you enter below to point to the public IP of your server docker run -d --restart=unless-stopped \\ -p 80:80 -p 443:443 \\ -v /opt/rancher:/var/lib/rancher \\ --privileged \\ rancher/rancher:latest --acme-domain \u003cYOUR.DNS.NAME\u003e Check out the documentation for additional advanced deployment options for the Rancher Single Node Docker Install Fun Fact: The Docker Install actually deploys a K3d Single Node Cluster under to the hood to run the Rancher MCM UI on top of ","date":"2021-11-17","objectID":"/posts/2021/rancher-multi-cluster-management-ui/:3:1","tags":null,"title":"Rancher Multi-Cluster Management UI","uri":"/posts/2021/rancher-multi-cluster-management-ui/"},{"categories":null,"content":"HA Deployment of Kubernetes Rancher on K8s Docker Advanced Options Assuming you have a HA (at least 3 master node) Kubernetes cluster up and running already, you can deploy Rancher on top of that to provide you with a HA deployment of you Rancher MCM. In this instance, we will use the Rancher self generated SSL cert, but you can refer to the docs for apply your own SSL certificates. Before you get started you will need: A HA Kubernetes Cluster. Any one will do. Helm installed locally First, you need to install cert-manager in your cluster: # If you have installed the CRDs manually instead of with the `--set installCRDs=true` option added to your Helm install command, you should upgrade your CRD resources before upgrading the Helm chart: kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.5.1/cert-manager.crds.yaml # Add the Jetstack Helm repository helm repo add jetstack https://charts.jetstack.io # Update your local Helm chart repository cache helm repo update # Install the cert-manager Helm chart helm install cert-manager jetstack/cert-manager \\ --namespace cert-manager \\ --create-namespace \\ --version v1.5.1 We can verify cert-manager is installed by running: kubectl get pods --namespace cert-manager Next, we can install Rancher: # Add the Rancher Helm repository helm repo add rancher-stable https://releases.rancher.com/server-charts/stable # Create the Rancher Namespace kubectl create namespace cattle-system # Install the Rancher Helm chart helm install rancher rancher-stable/rancher \\ --namespace cattle-system \\ --set hostname=rancher.my.org \\ --set bootstrapPassword=admin We can verify our rancher deployment using the following command: kubectl -n cattle-system rollout status deploy/rancher Now you should be able to visit https://rancher.my.org and access the cluster. You can now begin to import additional clusters, select existing clusters to explore and deploy new resources. Here are some videos to get you started with the Rancher 2.6 Interface: Rancher Online Meetup - September 2021 - Introducing SUSE Rancher 2.6 What’s New in Rancher 2.6? Rancher 2.6 UI Walkthrough and Q\u0026A ","date":"2021-11-17","objectID":"/posts/2021/rancher-multi-cluster-management-ui/:3:2","tags":null,"title":"Rancher Multi-Cluster Management UI","uri":"/posts/2021/rancher-multi-cluster-management-ui/"},{"categories":null,"content":"Rancher MCM - Final Words Hopefully, this post provided you with some insight into how valuable the Rancher MCM UI can be to your organization and helped you get started deploying it into your environment. Please reach out to us if you have any questions regarding installing Rancher or if you need any help running your DevSecOps systems. Thanks for reading! The AB Engineering Team Website: https://alphabravo.io Contact Us: https://alphabravo.io/contact-us ","date":"2021-11-17","objectID":"/posts/2021/rancher-multi-cluster-management-ui/:3:3","tags":null,"title":"Rancher Multi-Cluster Management UI","uri":"/posts/2021/rancher-multi-cluster-management-ui/"},{"categories":null,"content":"Why We Use Rancher Ok, let’s get this out of the way. Yes, we are a Rancher Gold Partner and yes, we provide Rancher Training. We are not those things because we are corpo shills. We partnered with Rancher because we use their products anyway. We use them in production (RKE2 and K3s). We use them on our Raspberry Pi clusters (K3s). We use them in Docker (K3d) And we manage it all with the Rancher UI. So what are some of the reasons why we use Rancher? The products are open source. At AlphaBravo we love Open Source technology and companies that find a way to open source their technology and still provide immense value beyond that open source project. Secure (or at least securable with minimal configuration tweaks). There are varying “out of the box” security settings across the product line, but Rancher does a great job of focusing on differentiating in each area (K3s vs RKE2 for example). Simple to deploy. This is a big one. As engineers who need to do our full-time jobs while also keeping track of the latest technology, it is important to be able to quickly deploy and assess new technologies is critical. With Rancher software and some basic Linux knowledge and some Linux systems around, you can deploy many of their products including a functioning Kubernetes cluster with a SINGLE CLI COMMAND. Let that sink in. Easy to use. When it is 2 AM and you are troubleshooting a production micro-service issue, you definitely need this as a feature. (Shout out to my Pager Duty crew.) I am obviously kidding. We should all be striving to expand our technical capabilities, play well with others, and operate as one big Dev and Ops family. Breaking down the silos and sharing our knowledge is what makes us stronger as a team. Rancher certainly assists in that mission. I mean, have you SEEN the sheer number of open-source products they have? Rancher UI - The Enterprise Kubernetes Management Platform. Rancher is a complete platform for managing Kubernetes clusters wherever you deploy them. RKE - RKE is a CNCF-certified Kubernetes distribution that runs entirely within Docker containers. It solves the common frustration of installation complexity with Kubernetes by removing most host dependencies and presenting a stable path for deployment, upgrades, and rollbacks. RKE2 - RKE2, also known as RKE Government, is Rancher’s next-generation Kubernetes distribution. It is a fully conformant Kubernetes distribution that focuses on security and compliance within the U.S. Federal Government sector. K3s is a highly available, certified Kubernetes distribution designed for production workloads in unattended, resource-constrained, remote locations or inside IoT appliances. K3os - k3OS is purpose-built to simplify Kubernetes operations in low-resource computing environments. Installs fast. Boots faster. Managed through Kubernetes. k3d - k3d is a lightweight wrapper to run k3s (Rancher Lab’s minimal Kubernetes distribution) in docker. k3d makes it very easy to create single- and multi-node k3s clusters in docker, e.g. for local development on Kubernetes. Longhorn - Longhorn is a lightweight, reliable, and easy-to-use distributed block storage system for Kubernetes. Longhorn is free, open-source software. Originally developed by Rancher Labs, it is now being developed as an incubating project of the Cloud Native Computing Foundation. Fleet - Fleet is GitOps at scale. Fleet is designed to manage up to a million clusters. It’s also lightweight enough that it works great for a single cluster too, but it really shines when you get to a large scale. By large scale, we mean either a lot of clusters, a lot of deployments, or a lot of teams in a single organization. Harvester - Harvester is a modern Hyperconverged infrastructure (HCI) solution built for bare metal servers using enterprise-grade open source technologies including Kubernetes, Kubevirt, and Longhorn. Designed for users looking for a cloud-native HCI solution, Harvester is a flexible and affordable offerin","date":"2021-11-15","objectID":"/posts/2021/why-we-use-rancher/:0:0","tags":null,"title":"Why We Use Rancher","uri":"/posts/2021/why-we-use-rancher/"},{"categories":null,"content":"Welcome To The Blog We are excited to have you here. As technology enthusiasts with a broad range of experiences, we hope to convey some tales, some tech, and some thoughts around the current state of DevSecOps. Our focus is mainly on building robust platforms using open-source software. But don’t be confused if we talk about non-open source software too. We are a small team and we understand very well that sometimes you need a product or tool that “just works”. While we provide technology services in staff augmentation, deployment acceleration, and training, we also are building some cool internal tools that we hope to release to the community soon. Thanks for checking us out and we look forward to hearing your feedback on what we post here. The AB Engineering Team https://alphabravo.io ","date":"2021-11-15","objectID":"/posts/2021/welcome-to-the-blog/:0:0","tags":null,"title":"Welcome To The Blog","uri":"/posts/2021/welcome-to-the-blog/"}]